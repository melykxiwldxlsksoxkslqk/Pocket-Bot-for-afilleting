from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.core.utils import _format_asset_name
from app.core.i18n import t


def get_language_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text=t("language.ru", lang), callback_data="set_lang:ru"),
        InlineKeyboardButton(text=t("language.en", lang), callback_data="set_lang:en"),
    )
    return builder.as_markup()


def get_start_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –µ–∫—Ä–∞–Ω—É."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text=t("start.trading_signals", lang), callback_data="show_signals"))
    builder.row(InlineKeyboardButton(text=t("start.education", lang), callback_data="show_education"))
    return builder.as_markup()


def get_verification_request_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∏ –¥–ª—è —Å—Ç–∞—Ä—Ç—É –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó: '–Ø –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–≤—Å—è!' —Ç–∞ '–£ –º–µ–Ω–µ –≤–∂–µ —î –∞–∫–∞—É–Ω—Ç'."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text=t("verify.i_registered", lang), callback_data="registration_confirmed"))
    builder.row(InlineKeyboardButton(text=t("verify.have_account_other_link", lang), url="https://teletype.in/@botx/PXB0G-8YLUu"))
    return builder.as_markup()


def get_check_registration_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text=t("verify.check_registration", lang), callback_data="check_registration"))
    return builder.as_markup()


def get_check_deposit_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–µ–ø–æ–∑–∏—Ç—É."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text=t("deposit.confirm_button", lang), callback_data="check_deposit"))
    return builder.as_markup()


def get_fully_verified_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–≤–Ω—ñ—Å—Ç—é –≤–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text=t("start.trading_signals", lang), callback_data="show_signals"))
    builder.row(InlineKeyboardButton(text=t("menu.group", lang), url="https://t.me/+c2XcSr7zbGZlMzEx"))
    builder.row(InlineKeyboardButton(text=t("start.education", lang), callback_data="show_education"))
    return builder.as_markup()


def get_market_type_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –≤–∏–±–æ—Ä—É —Ä–∏–Ω–∫—É (–í–∞–ª—é—Ç–∏, OTC)."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text=t("market.currencies", lang), callback_data="select_market_type:CURRENCY"),
        InlineKeyboardButton(text=t("market.otc", lang), callback_data="select_market_type:OTC")
    )
    builder.row(InlineKeyboardButton(text=t("back.back", lang), callback_data="back_to_signal_menu"))
    return builder.as_markup()


def get_currency_pairs_keyboard(pairs: list, market_type: str, page: int = 1, per_page: int = 8, lang: str = "ru") -> InlineKeyboardMarkup:
    """–°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –ø–æ—Å—Ç–æ—Ä—ñ–Ω–∫–æ–≤–æ—é –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é –¥–ª—è –≤–∞–ª—é—Ç–Ω–∏—Ö –ø–∞—Ä."""
    builder = InlineKeyboardBuilder()
    
    builder.row(InlineKeyboardButton(text=t("pairs.ai_reco", lang), callback_data="get_ai_recommendation"))
    
    start_index = (page - 1) * per_page
    end_index = start_index + per_page
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–∞—Ä
    for pair in pairs[start_index:end_index]:
        formatted_name = _format_asset_name(pair)
        builder.row(InlineKeyboardButton(text=formatted_name, callback_data=f"select_pair:{pair}"))
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
    nav_buttons = []
    if page > 1:
        nav_buttons.append(InlineKeyboardButton(text=t("nav.prev", lang), callback_data=f"pair_page:{market_type}:{page-1}"))
    
    total_pages = (len(pairs) + per_page - 1) // per_page
    if page < total_pages:
        nav_buttons.append(InlineKeyboardButton(text=t("nav.next", lang), callback_data=f"pair_page:{market_type}:{page+1}"))
        
    if nav_buttons:
        builder.row(*nav_buttons)
        
    builder.row(InlineKeyboardButton(text=t("back.to_menu", lang), callback_data="back_to_signal_menu"))
    return builder.as_markup()


def get_trading_time_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –≤–∏–±–æ—Ä—É —á–∞—Å—É –µ–∫—Å–ø—ñ—Ä–∞—Ü—ñ—ó."""
    builder = InlineKeyboardBuilder()
    minutes = [1, 2, 3, 4, 5, 10, 15]
    buttons = [InlineKeyboardButton(text=f"{m} {t('time.minutes_suffix', lang)}", callback_data=f"confirm_params:{m}") for m in minutes]
    
    # –†–æ–∑–º—ñ—â—É—î–º–æ –ø–æ 3 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    for i in range(0, len(buttons), 3):
        builder.row(*buttons[i:i+3])
        
    builder.row(InlineKeyboardButton(text=t("time.set_custom", lang), callback_data="set_custom_time"))
    builder.row(InlineKeyboardButton(text=t("back.to_pair_select", lang), callback_data="back_to_pair_select"))
    return builder.as_markup()


def get_signal_confirmation_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—É."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text=t("confirm.get_signal", lang), callback_data="get_signal"))
    builder.row(InlineKeyboardButton(text=t("confirm.change_settings", lang), callback_data="change_settings"))
    return builder.as_markup()


def get_signal_keyboard(asset: str, lang: str = "ru") -> InlineKeyboardMarkup:
    """Returns the keyboard with options after receiving a signal."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text=t("signal.new", lang), callback_data="new_signal")
    )
    return builder.as_markup()


def get_deposit_confirmation_keyboard() -> InlineKeyboardMarkup:
    """Returns a keyboard for confirming a deposit."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="‚úÖ –†–∞—Ö—É–Ω–æ–∫ –ø–æ–ø–æ–≤–Ω–∏–≤", callback_data="check_deposit")
    )
    return builder.as_markup()


def get_enter_workspace_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """Returns a keyboard with a single button to enter the workspace."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text=t("workspace.enter", lang), callback_data="enter_workspace")
    )
    return builder.as_markup()


def get_reregister_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–µ—Ä–µ—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text=t("verify.i_registered", lang), callback_data="check_registration"))
    builder.row(InlineKeyboardButton(text=t("verify.have_account_other_link", lang), url="https://teletype.in/@botx/PXB0G-8YLUu"))
    return builder.as_markup()

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ---

def get_admin_auth_keyboard() -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ä—É—á–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∞."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è", callback_data="admin_auth"))
    return builder.as_markup()


def get_cancel_keyboard(back_callback: str, lang: str = "ru") -> InlineKeyboardMarkup:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ '–ù–∞–∑–∞–¥'."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text=t("back.back", lang), callback_data=back_callback))
    return builder.as_markup()


def get_signal_menu_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å–∏–≥–Ω–∞–ª–æ–≤."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text=t("menu.workspace", lang), callback_data="enter_workspace"))
    builder.row(InlineKeyboardButton(text=t("menu.education", lang), callback_data="show_education_from_workspace"))
    article_url = (
        "https://telegra.ph/AI-SIGNAL-BOT-ARTICLE-How-to-Use-the-AI-Bot-to-Trade-Smarter--Not-Blindly-08-26"
        if lang == "en"
        else "https://telegra.ph/Kak-ispolzovat-II-bota-dlya-trejdinga-na-Pocket-Option--bez-magii-i-mifov-08-26"
    )
    builder.row(InlineKeyboardButton(text=t("menu.how", lang), url=article_url))
    builder.row(
        InlineKeyboardButton(text=t("menu.support", lang), url="https://t.me/botx_sup"),
        InlineKeyboardButton(text=t("menu.group", lang), url="https://t.me/+c2XcSr7zbGZlMzEx")
    )
    return builder.as_markup()


def get_retry_signal_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–∞."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë", callback_data="enter_workspace"))
    builder.row(InlineKeyboardButton(text=t("back.to_menu", lang), callback_data="back_to_signal_menu"))
    return builder.as_markup()


def get_education_prompt_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ –æ–±—É—á–µ–Ω–∏—è."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text=t("education.open_all", lang), callback_data="open_all_lessons_prompt"))
    builder.row(InlineKeyboardButton(text=t("start.trading_signals", lang), callback_data="trade_signals_prompt"))
    return builder.as_markup()


def get_back_to_panel_keyboard(lang: str = "ru"):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å'."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text=t("admin.back_to_panel", lang), callback_data="admin_panel"))
    return builder.as_markup()


def get_auth_confirmation_keyboard(lang: str = "ru"):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä—É—á–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text=t("auth.confirm_logged_in", lang), callback_data="confirm_auth"))
    return builder.as_markup()


def get_referral_settings_keyboard(settings: dict) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã."""
    builder = InlineKeyboardBuilder()
    min_deposit = settings.get('min_deposit', 20)
    
    builder.row(
        InlineKeyboardButton(text=f"üí∞ –î–µ–ø–æ–∑–∏—Ç: ${min_deposit}", callback_data="admin_change_min_deposit"),
        InlineKeyboardButton(text="üîó –ò–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É", callback_data="admin_change_ref_link")
    )
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="admin_settings"))
    return builder.as_markup() 